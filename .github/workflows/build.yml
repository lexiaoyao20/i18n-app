name: build

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: install nextest
        uses: taiki-e/install-action@nextest

      - uses: Swatinem/rust-cache@v2

      - name: Check code format
        run: cargo fmt -- --check

      - name: Check the package for errors
        run: cargo check --all

      - name: Lint rust sources
        run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings

      - name: Execute rust tests
        run: cargo nextest run --all-features

  changelog:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    outputs:
      content: ${{ steps.git-cliff.outputs.content }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

  build-rust:
    needs: [test, changelog]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: i18n-app-windows-x86_64.exe
          - platform: macos-latest
            target: aarch64-apple-darwin
            artifact_name: i18n-app-darwin-aarch64
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools-preview

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2

      - name: Build release binary
        run: |
          cargo build --release --target ${{ matrix.target }}
          ${{ matrix.platform == 'windows-latest' && 'copy' || 'cp' }} target/${{ matrix.target }}/release/${{ matrix.platform == 'windows-latest' && 'i18n-app.exe' || 'i18n-app' }} ${{ matrix.artifact_name }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ needs.changelog.outputs.content }}
          files: |
            ${{ matrix.artifact_name }}
            install.sh
